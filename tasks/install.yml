---

- name: Get current QRadar WinCollect agent install location.
  ansible.windows.win_reg_stat:
    path: HKLM:\SYSTEM\ControlSet001\Services\WinCollect
    name: ImagePath
  register: wincollect_agent_installed_path_reg

- name: Check if QRadar WinCollect binary exists.
  ansible.windows.win_stat:
    path: "{{ wincollect_agent_installed_path_reg.value | regex_replace('\\\"', '') }}"
  register: wincollect_agent_installed_binary
  when: wincollect_agent_installed_path_reg.exists

- name: Set fact for agent install path
  ansible.builtin.set_fact:
    wincollect_agent_install_path: "{{ wincollect_agent_installed_binary.stat.path | regex_search('(.+)\\\\bin\\\\WinCollectSvc.exe', '\\1' ) | join('\n')  if wincollect_agent_installed_binary.stat.path is defined }}"

- name: Get contents of install_config.txt
  ansible.builtin.slurp:
    src: '{{ wincollect_agent_install_path }}\config\install_config.txt'
  register: wincollect_install_config
  when: wincollect_agent_installed_path_reg.exists

- name: Set fact for agent managed/unmanaged
  ansible.builtin.set_fact:
    wincollect_managed: "{{ wincollect_install_config['content'] | b64decode | regex_search('ConfigurationServer=(.+)', '\\1') | first | trim | length > 0 if wincollect_agent_installed_binary.stat.path is defined else 'false' }}"

- name: Check uninstallstring
  ansible.windows.win_reg_stat:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{{ wincollect_product_id }}
    name: UninstallString
  register: wincollect_uninstallstring

- name: Add Uninstallstring to registry if missing.
  become: true
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{{ wincollect_product_id }}
    name: UninstallString
    data: "MsiExec.exe /X{{'{'}}wincollect_product_id{{'}'}}"
    type: expandstring
  when: not wincollect_uninstallstring.exists

- name: QRadar WinCollect agent upgrade block.
  when: wincollect_agent_installed_path_reg.exists and wincollect_agent_installed_binary.stat.exists
  block:
    - name: Get installed QRadar WinCollect agent version
      community.windows.win_file_version:
        path: "{{ wincollect_agent_installed_path_reg.value | regex_replace('\\\"', '') }}"
      register: wincollect_agent_installed_version

    - name: Starting upgrade QRadar WinCollect agent block.
      when: wincollect_agent_installed_version.win_file_version.file_version is version(wincollect_agent_version, '<')
      block:
        - name: Create a temporary file for downloaded package.
          ansible.windows.win_tempfile:
            state: file
          register: temp_file_name

        - name: Upload QRadar WinCollect agent installer
          ansible.windows.win_copy:
            src: "{{ wincollect_agent_installer_file }}"
            dest: "{{ temp_file_name.path }}"

        - name: Make sure WinCollect is stopped before upgrade.
          become: true
          ansible.windows.win_service:
            name: wincollect
            state: stopped

        - name: Upgrade QRadar WinCollect agent.
          become: true
          ansible.windows.win_command: "{{ temp_file_name.path }} {{ wincollect_agent_install_parameters }}"
          register: wincollect_agent_install
          failed_when: wincollect_agent_install.rc != 0


- name: QRadar WinCollect agent install block.
  when: not (wincollect_agent_installed_path_reg.exists and wincollect_agent_installed_binary.stat.exists) or wincollect_managed
  block:
    - name: Create a temporary file for downloaded package.
      ansible.windows.win_tempfile:
        state: file
      register: temp_file_name

    - name: Upload QRadar WinCollect agent installer.
      ansible.windows.win_copy:
        src: "{{ wincollect_agent_installer_file }}"
        dest: "{{ temp_file_name.path }}"

    - name: Make sure WinCollect is stopped before install.
      become: true
      ansible.windows.win_service:
        name: wincollect
        state: stopped
      when: wincollect_managed

    - name: Uninstall WinCollect since it's under Borg influense.
      become: true
      ansible.windows.win_package:
        product_id: '{{ wincollect_product_id }}'
        state: absent
        arguments: 'REMOVE_ALL_FILES=True /qn'
      when: wincollect_managed

    - name: Install QRadar WinCollect agent.
      become: true
      ansible.windows.win_command: "{{ temp_file_name.path }} {{ wincollect_agent_install_parameters }}"
      register: wincollect_agent_install
      failed_when: wincollect_agent_install.rc != 0
